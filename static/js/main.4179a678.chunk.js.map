{"version":3,"sources":["components/squiggle.tsx","Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Squiggle","xmlns","viewBox","style","height","width","fill","stroke","stroke-width","className","d","skills","name","tools","employers","roles","title","time","notes","Home","map","employer","index","Fragment","key","role","roleIndex","note","noteIndex","skill","tool","handleDarkModeButtonClick","event","preventDefault","app","document","getElementById","classList","contains","remove","add","App","id","onClick","x","y","path","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iQAUeA,EARY,WACvB,OACI,yBAAKC,MAAM,6BAA6BC,QAAQ,YAAYC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,UACxF,0BAAMC,KAAK,OAAOC,OAAO,UAAUC,eAAa,IAAIC,UAAU,MAAMC,EAAE,uSCI5EC,EAAkB,CACvB,CACCC,KAAM,YACNC,MAAO,CAAE,aAAc,aAAc,OAAQ,QAE9C,CACCD,KAAM,qBACNC,MAAO,CAAE,QAAS,eAAgB,QAAS,SAAU,OAAQ,MAAO,gBAAiB,QAAS,SAAU,OAAQ,YAAa,WAE9H,CACCD,KAAM,sBACNC,MAAO,CAAE,MAAO,aAAc,UAAW,UAAW,SAAU,MAAO,YAejEC,EAA0B,CAC/B,CACCF,KAAM,WACNG,MAAO,CACN,CACCC,MAAO,uBACPC,KAAM,uBACNC,MAAO,CACN,8EACA,wCACA,iGAKJ,CACCN,KAAM,mBACNG,MAAO,CACN,CACCC,MAAO,uBACPC,KAAM,uBACNC,MAAO,CACN,gGACA,iGACA,mEAGF,CACCF,MAAO,8BACPC,KAAM,4BACNC,MAAO,CACN,iEACA,0FACA,WA6DUC,EAtDQ,kBACnB,6BACF,4EAKA,kBAAC,EAAD,MACA,6BACC,0CACEL,EAAUM,KAAI,SAASC,EAAUC,GAClC,OACC,kBAAC,IAAMC,SAAP,CAAgBC,IAAKF,EAAM,KAC1B,4BAAMD,EAAST,MACbS,EAASN,MAAMK,KAAI,SAASK,EAAMC,GACnC,OACC,yBAAKF,IAAKE,EAAY,KACrB,2BAAKD,EAAKT,MAAV,MAAsBS,EAAKR,MAC3B,4BACGQ,EAAKP,MAAME,KAAI,SAASO,EAAMC,GAC/B,OAAO,wBAAIJ,IAAMI,EAAY,KAAQD,gBAU9C,kBAAC,EAAD,MACA,6BACC,sCACEhB,EAAOS,KAAI,SAACS,EAAOP,GAAR,OACZ,yBAAKE,IAAKF,EAAQ,KACjB,4BAAKO,EAAMjB,MACTiB,EAAMhB,MAAMO,KAAI,SAASU,EAAMR,GAChC,OAAO,0BAAME,IAAKF,EAAQ,KAAOQ,WAKrC,kBAAC,EAAD,MACA,yCAGA,kBAAC,EAAD,MACA,4CCnHIC,G,MAA4B,SAASC,GAC1CA,EAAMC,iBAEN,IAAIC,EAAMC,SAASC,eAAe,QAClC,OAAIF,QAAJ,IAAIA,OAAJ,EAAIA,EAAKG,UAAUC,SAAS,cACxB,OAAHJ,QAAG,IAAHA,KAAKG,UAAUE,OAAO,aAEnB,OAAHL,QAAG,IAAHA,KAAKG,UAAUG,IAAI,eAqBNC,EAjBO,kBACrB,0BAAMC,GAAG,OACR,4BAAQjC,UAAU,UACjB,4BACCA,UAAU,mBACVkC,QAASZ,GAET,yBAAK9B,MAAM,6BAA6B2C,EAAE,MAAMC,EAAE,MAAM3C,QAAQ,eAAc,2BAAG,0BAAMQ,EAAE,mNAG3F,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOoC,KAAK,IAAIC,UAAW5B,OCjBV6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCHNC,IAASC,OAAO,mBANH,kBACZ,kBAAC,IAAD,KACC,kBAAC,EAAD,SAIc,MAAUnB,SAASC,eAAe,SD4H5C,kBAAmBmB,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.4179a678.chunk.js","sourcesContent":["import React from 'react';\n\nconst Squiggle: React.FC = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 4\" style={{ height: '20px', width: '400px' }}>\n            <path fill=\"none\" stroke=\"#000000\" stroke-width=\"1\" className=\"st0\" d=\"M 0, 0.5 c 5, 0, 5, 3, 10, 3 s 5, -3,10,-3 c 5, 0, 5, 3, 10, 3 s 5, -3, 10, -3 c 5, 0, 5, 3, 10, 3 s 5, -3,10,-3 c 5, 0, 5, 3, 10, 3 s 5, -3, 10, -3 c 5, 0, 5, 3, 10, 3 s 5, -3,10,-3 c 5, 0, 5, 3, 10, 3 s 5, -3, 10, -3 c 5, 0, 5, 3, 10, 3 s 5, -3,10,-3 c 5, 0, 5, 3, 10, 3 s 5, -3, 10, -3\"/>\n        </svg>\n    )\n}\n\nexport default Squiggle;","import React from 'react';\n\nimport Squiggle from './components/squiggle';\n\ninterface Skill {\n\tname: string,\n\ttools: string[],\n}\n\nconst skills: Skill[] = [\n\t{\n\t\tname: \"Languages\",\n\t\ttools: [ \"Javascript\", \"Typescript\", \"Ruby\", \"SQL\" ]\n\t},\n\t{\n\t\tname: \"Frameworks & Tools\",\n\t\ttools: [ \"React\", \"React Native\", \"Redux\", \"Gatsby\", \"Jest\", \"Vue\", \"Ruby on Rails\", \"RSpec\", \"jQuery\", \"Node\", \"socket.io\", \"Stripe\" ]\n\t},\n\t{\n\t\tname: \"Systems & Databases\",\n\t\ttools: [ \"SQL\", \"PostgreSQL\", \"MongoDB\", \"Ansible\", \"Docker\", \"Git\", \"Github\" ]\n\t}\n]\n\ninterface Role {\n\ttitle: string,\n\ttime: string,\n\tnotes: string[],\n}\n\ninterface Employment {\n\tname: string,\n\troles: Role[],\n}\n\nconst employers: Employment[] = [\n\t{\n\t\tname: \"Idyaflow\",\n\t\troles: [\n\t\t\t{\n\t\t\t\ttitle: 'Junior Web Developer',\n\t\t\t\ttime: 'Dec. 2018 to Current',\n\t\t\t\tnotes: [\n\t\t\t\t\t'ansible? Designed and built payment and subscription managment microservice',\n\t\t\t\t\t'Used React Native to build mobile app',\n\t\t\t\t\t'Other tools used include React, Redux, Node, jQuery, MongoDB, Stripe, Bootstrap, socket.io',\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: 'Bench Accounting',\n\t\troles: [\n\t\t\t{\n\t\t\t\ttitle: \"Accounting Team Lead\",\n\t\t\t\ttime: \"May 2016 to May 2018\",\n\t\t\t\tnotes: [\n\t\t\t\t\t'Created team-specific metrics and dashboards enabling team members to track their performance',\n\t\t\t\t\t'Worked with sales team to create and maintain client qualification standards and documentation',\n\t\t\t\t\t'Team consistently had operations-best monthly bookkeeping KPIs',\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Senior Accounting Associate',\n\t\t\t\ttime: 'February 2015 to May 2016',\n\t\t\t\tnotes: [\n\t\t\t\t\t'Held largest portfolio of clients by quantity and KPI measures',\n\t\t\t\t\t'Helped shape company-wide bookkeeping standards as part of the Quality & Standards team',\n\t\t\t\t\t'???',\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n]\n\nconst Home: React.FC = () => (\n    <div>\n\t\t<div>\n\t\t\tthis is the part where I talk about myself.\n\t\t\t\n\t\t\t{/* Web developer with a passion for clean code and solving problems. Self-motivated, driven by pushing the boundaries of my knowledge. With experience working as an accounting team lead, I know know that collaboration and teamwork will bring out everyone's best. */}\n\t\t</div>\n\t\t<Squiggle />\n\t\t<div>\n\t\t\t<h3>Employment</h3>\n\t\t\t{ employers.map(function(employer, index) {\n\t\t\t\treturn (\n\t\t\t\t\t<React.Fragment key={index+200}>\n\t\t\t\t\t\t<h4>{ employer.name }</h4>\n\t\t\t\t\t\t{ employer.roles.map(function(role, roleIndex) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={roleIndex + 300}>\n\t\t\t\t\t\t\t\t\t<p>{ role.title } - { role.time }</p>\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t{ role.notes.map(function(note, noteIndex) {\n\t\t\t\t\t\t\t\t\t\t\treturn <li key={ noteIndex + 400 }>{ note }</li>\t\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)\t\n\t\t\t})}\n\t\t</div>\n\t\t<Squiggle />\n\t\t<div>\n\t\t\t<h3>Skills</h3>\n\t\t\t{ skills.map((skill, index) => (\n\t\t\t\t<div key={index + 100}>\n\t\t\t\t\t<h4>{skill.name}</h4>\n\t\t\t\t\t{ skill.tools.map(function(tool, index) {\n\t\t\t\t\t\treturn <span key={index + 1000}>{tool}</span>\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t)) }\n\t\t</div>\n\t\t<Squiggle />\n\t\t<div>\n\t\t\tProjects\n\t\t</div>\n\t\t<Squiggle />\n\t\t<div>\n\t\t\tEducation\n\t\t</div>\n    </div>\n);\n\n\nexport default Home;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Home from './Home';\n\nimport './App.css';\n\nconst handleDarkModeButtonClick = function(event: any) {\n\tevent.preventDefault();\n\t\n\tlet app = document.getElementById('App');\n\tif (app?.classList.contains('dark-mode')) {\n\t\tapp?.classList.remove('dark-mode');\n\t} else {\n\t\tapp?.classList.add('dark-mode');\n\t}\n}\n\nconst App: React.FC = () => (\n\t<main id='App'>\n\t\t<header className='header'>\n\t\t\t<button \n\t\t\t\tclassName='dark-mode-button'\n\t\t\t\tonClick={handleDarkModeButtonClick}\n\t\t\t>\n\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 640\"><g><path d=\"M413.9,407.2c28.6-28.6,47.6-63.3,57.1-99.8c-74.3,55.9-180.3,50-247.9-17.6c-67.9-67.9-73.6-174.5-16.9-248.9  C169.1,50.1,134,69.2,105,98.2c-85.3,85.3-85.3,223.6,0,309C190.3,492.5,328.6,492.5,413.9,407.2z\" /></g></svg>\n\t\t\t</button>\n\t\t</header>\n\t\t<Switch>\n\t\t\t<Route path='/' component={Home} />\n\t\t</Switch>\n\t</main>\n);\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nconst Root = () => (\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>\t\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}